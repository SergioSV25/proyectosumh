#!/bin/bash

#Constantes de los argumentos
MAX_SORTEOS=15
MAX_JUGADORES=10
#Códigos de Error
ERR_NUM_ARGS=1
ERR_NUM_SORTEOS=2
ERR_NUM_JUGADORES=3
#Ejecución satisfactoria
RET_OK=0
RET_RR=1

Sintaxis(){
#-----------------------------------
#Esta función se encarga de mostrar la ayuda de cómo utilizar el script y termina su ejecución
#Recibe como parametro el código de terminación
 
exit $1
}
ControlArgumentos(){
# Esta función se encarga de controlar que los argumentos están en el rango permitido
# Recibe el conjunto de argumentos que se han pasado al script
# Devuelve un código de error indicando el tipo de error que se ha producido
# Si piden ayuda con -? llama a Sintaxis con el código de retorno 0

	if [[ "$1" == "-?" ]]; then
		# Verifica si el primer argumento es igual a "-?"
		# Si es verdadero, muestra un mensaje de ayuda y llama a la función Sintaxis con el código de retorno RET_OK
		echo Ayuda
		Sintaxis $RET_OK
	fi


	# Verifica si ambos argumentos son números
	#if ! [[ $1 =~ ^[0-9]+$ ]] || ! [[ $2 =~ ^[0-9]+$ ]]; then (se traduce como si !(son numeros))
	#	# Retorna el código de error ERR_NO_NUM si al menos uno de los argumentos no es un número
	#	return $ERR_NO_NUM
	#fi

	if [ $# -gt 2 -o $# -lt 2 ]; then
		#Verifica si el número de argumentos pasados al script es mayor que 2 o menor que 2
		#Si es verdadero, retorna el código de error ERR_NUM_ARGS
		return $ERR_NUM_ARGS
	fi

	
	if [ $1 -gt $MAX_SORTEOS -o $1 -lt 1 ]; then
		# Verifica si el primer argumento (número de sorteos) es mayor que MAX_SORTEOS o menor que 1
		# Si es verdadero, retorna el código de error ERR_NUM_SORTEOS
		return $ERR_NUM_SORTEOS
	fi

	
	if [ $2 -gt $MAX_JUGADORES -o $2 -lt 1 ]; then
		# Verifica si el segundo argumento (número de jugadores) es mayor que MAX_JUGADORES o menor que 1
		# Si es verdadero, retorna el código de error ERR_NUM_JUGADORES
		return $ERR_NUM_JUGADORES
	fi

}

LimpiarFicheros(){
    # Esta función elimina los ficheros de ejecuciones anteriores

    # Elimina todos los ficheros con nombres en el formato S[0-9]R (por ejemplo, S1R, S2R, ..., S9R)
    rm -rf S[0-9]R

    # Elimina todos los ficheros con nombres en el formato S[0-9][0-9]R (por ejemplo, S10R, S11R, ..., S99R)
    rm -rf S[0-9][0-9]R
}

Inicializar(){
    # Esta función se encarga de inicializar el array de premios
    # Recibe como parámetro el número de jugadores que entran en los sorteos que se ejecutan
    
    clear  # Limpia la pantalla

    # Bucle que recorre los jugadores desde 1 hasta el número proporcionado como parámetro
    for jugador in $(seq 1 $1); do #for jugador in $(seq 1 $(( $1 - 1 ))); do -> Seria lo mismo si quisiera hacer hasta el parametro - 1
        premios[$jugador]=0  # Inicializa el premio del jugador en la posición correspondiente a 0
    done
} 
#Ejemplo con variables
#for i in $(seq 0 $((numHijos-1))); do -> # Iteramos de 0 a numHijos-1

LeerFicherosPremio(){ 
# Esta función se encarga de leer uno a uno los ficheros de premios
# Recibe como parámetros el numero de sorteos y el de jugadores en cada sorteo
# Rellenará el array de premios, sumando a cada jugador su importe correspondiente al numero de sorteo
	
	for nsorteo in $(seq 1 $1); do  
		# Bucle que itera sobre los números de sorteo desde 1 hasta el número proporcionado como parámetro
		fichero="./S${nsorteo}R"  # Define el nombre del archivo utilizando el número de sorteo
		contJugador=1  # Inicializa el contador de jugadores a 1

		while read -r linea; do
			# Bucle que lee cada línea del archivo de sorteo
			if [[ "${linea:0:1}" == "#" ]]; then
				:  # Si la línea comienza con "#" (comentario), no hace nada y continúa con la siguiente línea
			else
				premios[$contJugador]=$((${premios[$contJugador]} + linea))  # Suma el valor de la línea al premio del jugador
				contJugador=$((contJugador+1))  # Incrementa el contador de jugadores
			fi
		done < $fichero  # Redirige la entrada del bucle while desde el archivo de sorteo
	done
}

MostrarResultados(){
	echo "|-------------------------------------------------------|"
	echo "|	Informe de resultados			      	|"
	echo "|	Numero de Sorteos: $numSorteos   Número de Jugadores: $numJugadores	|"
	echo "|-------------------------------------------------------|"
	for nJugador in `seq 1 $2`; do
	echo "|	Jugador $nJugador: Total premio: ${premios[$nJugador]}			|"
	echo "|-------------------------------------------------------|"
	done
}
# Llama a la función ControlArgumentos pasándole todos los argumentos del script
ControlArgumentos $*
# Almacena el código de retorno de la función ControlArgumentos
retVal=$?

# Si el código de retorno indica un número incorrecto de argumentos
if [ $retVal -eq $ERR_NUM_ARGS ]; then
    echo El número de argumentos debe ser 2
    # Muestra un mensaje de error y llama a la función Sintaxis con el código de retorno correspondiente
    Sintaxis $ERR_NUM_ARGS
fi

# Si el código de retorno indica un número incorrecto de sorteos
if [ $retVal -eq $ERR_NUM_SORTEOS ]; then
    echo El número de sorteos debe ser entre 1 y 15
    # Muestra un mensaje de error y llama a la función Sintaxis con el código de retorno correspondiente
    Sintaxis $ERR_NUM_SORTEOS
fi

# Si el código de retorno indica un número incorrecto de jugadores
if [ $retVal -eq $ERR_NUM_JUGADORES ]; then
    echo El número de jugadores debe ser entre 1 y 10
    # Muestra un mensaje de error y llama a la función Sintaxis con el código de retorno correspondiente
    Sintaxis $ERR_NUM_JUGADORES
fi

# Al superar el control de argumentos, asigna los argumentos a las variables
numSorteos=$1
numJugadores=$2

# Limpia los ficheros de ejecuciones anteriores
LimpiarFicheros

# Inicializa el array de premios con el número de jugadores
Inicializar $numJugadores

# Itera sobre los números de sorteo desde 1 hasta el número de sorteos
for nsorteo in `seq 1 $numSorteos`; do
    # Ejecuta el script 'sorteo' pasándole el número de sorteo y el número de jugadores
    ./sorteo $nsorteo $numJugadores
done

# Lee los ficheros de premios y actualiza el array de premios
LeerFicherosPremio $numSorteos $numJugadores

# Muestra los resultados finales
MostrarResultados $numSorteos $numJugadores
